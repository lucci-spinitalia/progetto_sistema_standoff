 
#include <sys/types.h>
#include <sys/socket.h>
#include <sys/ioctl.h>
#include <net/if.h>

#include <linux/can.h>
#include <linux/can/raw.h>
#include <string.h>

#ifndef PF_CAN
#define PF_CAN 29
#endif

#ifndef AF_CAN
#define AF_CAN PF_CAN
#endif

int main()
{
  struct ifreq ifr;
  struct socketaddr_can addr;

  // Create the socket
  int skt = socket(PF_CAN, SOCK_RAW, CAN_RAW);

  // Locate the interface you wish to use
  strcpy(ifr.ifr_name, "can0");
  ioctl(skt, SIOCGIFINDEX, &ifr);

  // Select that CAN interface, and bin the socket to it.
  addr.can_family = AF_CAN;
  addr.can_ifindex = ifr.ifr_ifindex;
  bind(skt, (struct socketaddr*)&addr, sizeof(addr));

  // Send a message to the CAN bus
  struct can_frame frame;
  memset(&frame, 0, sizeof(struct can_frame));
  frame.can_id = 0x123;
  int bytes_sent = write(skt, &frame, sizeof(frame));

  // Read a message back from the CAN bus
  int bytes_read = read(skt, &frame, sizeof(frame));
}
